package isw.ui;

import isw.dao.CustomerDAO;
import isw.domain.Customer;
import isw.enums.SearchTypes;
import isw.releases.Album;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;

public class SearchResults extends JFrame {

    private JPanel searchResultsPanel;
    private JPanel releasePanel;
    private JLabel searchResultsLabel;

    public SearchResults(List<?> items, SearchTypes searchType){
        $$$setupUI$$$(); // Initialize UI components generated by the GUI builder


        //System.out.println("Number of albums found: " + albums.size()); // Debug print
        setContentPane(searchResultsPanel);
        setTitle("Search Results");
        setSize(600, 600);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        /*searchResultsPanel = new JPanel(new BorderLayout());
        releasePanel = new JPanel(new GridLayout(0, 3, 10, 10));*/

        if(searchType==SearchTypes.ALBUM){
            for (Object item : items){
                Album album = (Album) item;
                AlbumDisplayPanel albumPanel = new AlbumDisplayPanel(album);
                albumPanel.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent e) {

                    }
                });
                releasePanel.add(albumPanel);
            }
        } else if (searchType == SearchTypes.CUSTOMER) {
            for (Object item : items){
                Customer c = (Customer) item;
                ProfileDisplayPanel profilePanel = new ProfileDisplayPanel(c);
                releasePanel.add(profilePanel);
            }
        }


        releasePanel.revalidate();
        releasePanel.repaint();

        //searchResultsPanel.add(releasePanel, BorderLayout.CENTER);

        JScrollPane scrollPane = new JScrollPane(releasePanel);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        searchResultsPanel.add(scrollPane, BorderLayout.CENTER);
    }

    /*public SearchResults(List<Customer> customers){
        $$$setupUI$$$(); // Initialize UI components generated by the GUI builder
        System.out.println("Number of users found: " + customers.size()); // Debug print
        setContentPane(searchResultsPanel);
        setTitle("Users");
        setSize(600, 600);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);



        releasePanel.revalidate();
        releasePanel.repaint();

        //searchResultsPanel.add(releasePanel, BorderLayout.CENTER);

        JScrollPane scrollPane = new JScrollPane(releasePanel);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        searchResultsPanel.add(scrollPane, BorderLayout.CENTER);
    }*/

    private void $$$setupUI$$$() {
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        releasePanel = new JPanel(new GridLayout(0, 3, 10, 10)); // Customize layout as needed
    }

    public static void main(String[] args) {
        ArrayList<Customer> allUsers = new ArrayList<>();
        CustomerDAO.getClientes(allUsers);
        SearchResults allCustomerWindow = new SearchResults(allUsers, SearchTypes.CUSTOMER);
        allCustomerWindow.setVisible(true);
    }
}
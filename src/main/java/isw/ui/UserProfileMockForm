package isw.ui;

import javax.swing.*;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import java.awt.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class UserProfileMockForm extends JFrame {

    private int numberOfPlaylists;
    private int followersCount;
    private int followingCount;
    private String nombreUsuario;
    private ArrayList<String> topArtists;
    private ArrayList<String> topTracks;
    private ArrayList<String> playlists;

    private int idLogged;
    private JPanel followersPanel;
    private JPanel followingPanel;

    public UserProfileMockForm(int idLogged) {
        this.idLogged = idLogged;

        // Datos inventados
        this.nombreUsuario = "UsuarioPrueba" + idLogged;
        this.numberOfPlaylists = 5;
        this.followersCount = 120;
        this.followingCount = 45;
        this.topArtists = new ArrayList<>(Arrays.asList("Artista1", "Artista2", "Artista3"));
        this.topTracks = new ArrayList<>(Arrays.asList("Canción1", "Canción2", "Canción3"));
        this.playlists = new ArrayList<>(Arrays.asList("Playlist1", "Playlist2", "Playlist3"));

        // Configuración del JFrame
        setTitle("Mock User Profile");
        setSize(800, 700);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());
        getContentPane().setBackground(new Color(18, 18, 18));

        // Panel principal
        JPanel profilePanel = createProfilePanel();
        followersPanel = createListPanel("Followers", Color.LIGHT_GRAY);
        followingPanel = createListPanel("Following", Color.CYAN);

        loadMockFollowersAndFollowing();

        JPanel mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.Y_AXIS));
        mainPanel.setBackground(new Color(18, 18, 18));
        mainPanel.add(profilePanel);
        mainPanel.add(Box.createVerticalStrut(20));
        mainPanel.add(followersPanel);
        mainPanel.add(Box.createVerticalStrut(20));
        mainPanel.add(followingPanel);

        JScrollPane scrollPane = new JScrollPane(mainPanel);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);

        add(scrollPane, BorderLayout.CENTER);
    }

    private JPanel createProfilePanel() {
        JPanel profilePanel = new JPanel(new BorderLayout());
        profilePanel.setBackground(new Color(18, 18, 18));

        JPanel headerPanel = new JPanel();
        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.Y_AXIS));
        headerPanel.setBackground(new Color(18, 18, 18));

        JLabel profileLabel = new JLabel("Profile");
        profileLabel.setForeground(Color.LIGHT_GRAY);
        profileLabel.setFont(new Font("Arial", Font.PLAIN, 14));
        headerPanel.add(Box.createVerticalStrut(20));
        headerPanel.add(profileLabel);

        JLabel avatarLabel = new JLabel();
        avatarLabel.setOpaque(true);
        avatarLabel.setBackground(Color.GRAY);
        avatarLabel.setPreferredSize(new Dimension(100, 100));
        avatarLabel.setHorizontalAlignment(SwingConstants.CENTER);
        avatarLabel.setVerticalAlignment(SwingConstants.CENTER);
        avatarLabel.setBorder(createCircleBorder(Color.WHITE));

        headerPanel.add(Box.createVerticalStrut(10));
        headerPanel.add(avatarLabel);

        JLabel profileNameLabel = new JLabel(nombreUsuario);
        profileNameLabel.setFont(new Font("Arial", Font.BOLD, 36));
        profileNameLabel.setForeground(Color.WHITE);
        headerPanel.add(profileNameLabel);

        JLabel profileInfoLabel = new JLabel(numberOfPlaylists + " Saved Albums · " + followersCount + " Followers · " + followingCount + " Following");
        profileInfoLabel.setForeground(Color.LIGHT_GRAY);

        profilePanel.add(headerPanel, BorderLayout.NORTH);
        profilePanel.add(profileInfoLabel, BorderLayout.SOUTH);

        return profilePanel;
    }

    private JPanel createListPanel(String title, Color titleColor) {
        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());

        JLabel titleLabel = new JLabel(title);
        titleLabel.setForeground(titleColor);
        titleLabel.setFont(new Font("Arial", Font.BOLD, 16));
        panel.add(titleLabel, BorderLayout.NORTH);

        JPanel listPanel = new JPanel();
        listPanel.setLayout(new BoxLayout(listPanel, BoxLayout.Y_AXIS));
        listPanel.setBackground(Color.DARK_GRAY);

        panel.add(listPanel, BorderLayout.CENTER);
        return panel;
    }

    private void loadMockFollowersAndFollowing() {
        // Datos inventados
        List<String> mockFollowers = Arrays.asList("Seguidor1", "Seguidor2", "Seguidor3", "Seguidor4", "Seguidor5");
        List<String> mockFollowing = Arrays.asList("Seguido1", "Seguido2", "Seguido3", "Seguido4");

        JPanel followersList = (JPanel) followersPanel.getComponent(1);
        addMockCustomersToPanel(mockFollowers, followersList);

        JPanel followingList = (JPanel) followingPanel.getComponent(1);
        addMockCustomersToPanel(mockFollowing, followingList);
    }

    private void addMockCustomersToPanel(List<String> names, JPanel panel) {
        panel.removeAll();
        for (String name : names) {
            JButton customerButton = new JButton(name);
            customerButton.setAlignmentX(Component.LEFT_ALIGNMENT);
            customerButton.addActionListener(e -> JOptionPane.showMessageDialog(this, "Profile of: " + name, "Profile", JOptionPane.INFORMATION_MESSAGE));
            panel.add(customerButton);
            panel.add(Box.createVerticalStrut(5));
        }
        panel.revalidate();
        panel.repaint();
    }

    public Border createCircleBorder(Color color) {
        return new AbstractBorder() {
            @Override
            public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
                g.setColor(color);
                g.fillOval(x, y, width, height);
            }
        };
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            UserProfileMockForm mockForm = new UserProfileMockForm(1); // Cambiar ID para pruebas
            mockForm.setVisible(true);
        });
    }
}
